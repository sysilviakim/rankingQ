[{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://sysilviakim.com/rankingQ/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://sysilviakim.com/rankingQ/articles/v1-basic-setup.html","id":"target-ranking-question","dir":"Articles","previous_headings":"","what":"Target ranking question","title":"1. Basic Setup","text":"Ranking data expected wide format, multiple columns used represent different items values represent items’ marginal ranks. example, identity, four sources identity app_party, app_religion, app_gender, app_race. example, first respondent ranked party first, gender second, race third, religion fourth—.e., “1423” respondent’s outcome, given reference choice set party-religion-gender-race/ethnicity.","code":"head(identity) #> # A tibble: 6 × 16 #>   s_weight app_identity app_identity_1 app_identity_2 app_identity_3 #>      <dbl> <chr>                 <dbl>          <dbl>          <dbl> #> 1    0.844 1423                      1              4              2 #> 2    0.886 1423                      1              4              2 #> 3    2.96  3412                      3              4              1 #> 4    0.987 1423                      1              4              2 #> 5    1.76  4132                      4              1              3 #> 6    0.469 3124                      3              1              2 #> # ℹ 11 more variables: app_identity_4 <dbl>, anc_identity <chr>, #> #   anc_identity_1 <dbl>, anc_identity_2 <dbl>, anc_identity_3 <dbl>, #> #   anc_identity_4 <dbl>, anc_correct_identity <dbl>, #> #   app_identity_recorded <chr>, anc_identity_recorded <chr>, #> #   app_identity_row_rnd <chr>, anc_identity_row_rnd <chr>"},{"path":"http://sysilviakim.com/rankingQ/articles/v1-basic-setup.html","id":"anchor-ranking-question","dir":"Articles","previous_headings":"","what":"Anchor ranking question","title":"1. Basic Setup","text":"perform bias correction, data must call anchor ranking question. anchor question auxiliary ranking question looks similar target question, whose “correct” answer known researchers. example, identity responses anchor question asked respondents rank order four levels government: house, state, municipal, school board. responses included anc_house, anc_neighborhood, anc_city, anc_state. , correct answer assumed “1234.” Based theses responses, code indicator variable (anc_correct_identity) takes 1 respondents offer correct answer 0 otherwise. example, following dataset, first third respondent provided “wrong” answer anchor question, whereas rest provided correct answer.","code":"identity[, c(paste0(\"anc_identity_\", seq(4)), \"anc_correct_identity\")] |>   tail() #> # A tibble: 6 × 5 #>   anc_identity_1 anc_identity_2 anc_identity_3 anc_identity_4 #>            <dbl>          <dbl>          <dbl>          <dbl> #> 1              3              1              2              4 #> 2              1              2              3              4 #> 3              4              3              2              1 #> 4              1              2              3              4 #> 5              1              2              3              4 #> 6              1              2              3              4 #> # ℹ 1 more variable: anc_correct_identity <dbl>"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"estimating-the-proportion-of-random-responses","dir":"Articles","previous_headings":"","what":"Estimating the Proportion of Random Responses","title":"2. Correcting Bias in Ranking Data","text":"identity dataset, given anc_correct_identity, raw proportion correctly incorrectly answered anchor question follows: 69.7% seen , however, likely upwardly biased estimate percentage non-random responses, must account respondents accidentally answering question correctly. unbiased estimation random responses, use unbiased_correct_prop. revised estimate non-random responses 68.4%. say, roughly 31.6% respondents randomly responding.","code":"round(prop.table(table(identity$anc_correct_identity)) * 100, digits = 1) ##  ##    0    1  ## 30.3 69.7 identity$random_identity <- case_when(   identity$anc_correct_identity == 1 ~ 0,   TRUE ~ 1 )  unbiased_correct_prop(   sum(identity$random_identity == 0) / sum(!is.na(identity$random_identity)),   J = 4 ) ## [1] 0.6836776"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"direct-bias-correction-via-imprr_direct","dir":"Articles","previous_headings":"","what":"Direct Bias Correction via imprr_direct","title":"2. Correcting Bias in Ranking Data","text":"rankingQ two primary functions perform bias correction. First, imprr_direct improves ranking data applying direct bias correction several classes quantities interest. apply bias correction, specify dataset (data), number items (J), prefix column names contain J items target ranking questions, prefix column names anchor ranking questions. survey weights available, can included specifying weight function.","code":"## app_identity_1 indicates marginal rank for party ## app_identity_2 indicates marginal rank for religion ## app_identity_3 indicates marginal rank for gender ## app_identity_4 indicates marginal rank for race  # Perform bias correction out_direct <- imprr_direct(   data = identity,   ## Not strictly necessary if app_identity, the input for `main_q`,   ## is specified. In that case, will look for J if unspecified   J = 4,    ## automatically looks for    ## app_identity_1, app_identity_2, app_identity_3, app_identity_4   main_q = \"app_identity\",    anc_correct = \"anc_correct_identity\" )"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"results-estimated-proportion-of-random-responses","dir":"Articles","previous_headings":"Direct Bias Correction via imprr_direct","what":"Results: Estimated Proportion of Random Responses","title":"2. Correcting Bias in Ranking Data","text":"first output imprr_direct estimated proportion random responses. vector est_p_random returns estimated proportion along lower upper ends corresponding 95% confidence interval.","code":"# Estimated proportion of random responses with a 95% CI  out_direct$est_p_random ##        mean     lower     upper ## 1 0.3153146 0.2864261 0.3481958"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"results-estimated-quantities-of-interest","dir":"Articles","previous_headings":"Direct Bias Correction via imprr_direct","what":"Results: Estimated Quantities of Interest","title":"2. Correcting Bias in Ranking Data","text":"output bias-corrected estimates four classes ranking-based quantities, including average ranks pairwise ranking probabilities top-k ranking probabilities marginal ranking probabilities output tibble qoi stores estimated quantities corresponding 95% CIs. example, one can visualize result average ranks follows:","code":"# View the results based on the quantity of interest out_direct$qoi %>%    filter(qoi == \"average rank\") ## # A tibble: 4 × 6 ## # Groups:   item, qoi [4] ##   item           qoi          outcome              mean lower upper ##   <chr>          <chr>        <chr>               <dbl> <dbl> <dbl> ## 1 app_identity_1 average rank Avg: app_identity_1  3.27  3.18  3.37 ## 2 app_identity_2 average rank Avg: app_identity_2  2.60  2.49  2.71 ## 3 app_identity_3 average rank Avg: app_identity_3  1.65  1.56  1.73 ## 4 app_identity_4 average rank Avg: app_identity_4  2.48  2.40  2.57 # View the results based on the item out_direct$qoi %>%   filter(item == \"party\") ## # A tibble: 0 × 6 ## # Groups:   item, qoi [0] ## # ℹ 6 variables: item <chr>, qoi <chr>, outcome <chr>, mean <dbl>, lower <dbl>, ## #   upper <dbl> # Plot the result out_direct$qoi %>%   mutate(     item = factor(       item, levels = paste0(\"app_identity_\", seq(4)),       labels = c(\"party\", \"religion\", \"gender\", \"race\")     )   ) %>%   filter(qoi == \"average rank\") %>%   ggplot(aes(x = mean, y = item)) +   geom_point() +   geom_linerange(aes(xmin = lower, xmax = upper)) +   theme_bw() +   xlab(\"average rank\") +   ylab(\"\")"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"weighting-based-bias-correction-via-imprr_weight","dir":"Articles","previous_headings":"","what":"Weighting-Based Bias Correction via imprr_weight","title":"2. Correcting Bias in Ranking Data","text":"alternative methods bias correction based idea inverse-probability weighting. imprr_weight improves ranking data computing bias correction weights, can used correct bias inverse-probability weighting framework. arguments previously used can used follows:","code":"# Perform bias correction out_weights <- imprr_weights(   data = identity,   J = 4,   main_q = \"app_identity\",   anc_correct = \"anc_correct_identity\" )"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"results-estimated-weights","dir":"Articles","previous_headings":"Weighting-Based Bias Correction via imprr_weight","what":"Results: Estimated Weights","title":"2. Correcting Bias in Ranking Data","text":"output imprr_weights contains set weights possible ranking profiles J items. example, J = 4, set {1234, 1243, ..., 4321} profile now estimated weight.","code":"# View the estimated weights out_weights$weights ##    ranking         w ## 1     1234 0.0000000 ## 2     1243 0.0000000 ## 3     1324 0.0000000 ## 4     1342 0.0000000 ## 5     1423 1.0158812 ## 6     1432 0.4078355 ## 7     2134 0.8582397 ## 8     2143 0.8070574 ## 9     2314 0.7456387 ## 10    2341 0.0000000 ## 11    2413 1.1316994 ## 12    2431 0.5767371 ## 13    3124 1.0238295 ## 14    3142 0.5400194 ## 15    3214 0.8251218 ## 16    3241 0.0000000 ## 17    3412 1.2733020 ## 18    3421 1.0314721 ## 19    4123 1.2628998 ## 20    4132 1.1045545 ## 21    4213 1.0388263 ## 22    4231 0.4999637 ## 23    4312 1.2711103 ## 24    4321 1.0593130"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"results-estimated-pmf-with-bias-corrected-data","dir":"Articles","previous_headings":"Weighting-Based Bias Correction via imprr_weight","what":"Results: Estimated PMF with Bias Corrected Data","title":"2. Correcting Bias in Ranking Data","text":"imprr_weight also returns estimated probability mass function ranking profile bias correction.","code":"# View the estimated corrected PMF out_weights$corrected_pmf %>%   select(ranking, prop) ##    ranking        prop ## 1     1234 0.000000000 ## 2     1243 0.000000000 ## 3     1324 0.000000000 ## 4     1342 0.000000000 ## 5     1423 0.046944603 ## 6     1432 0.007538549 ## 7     2134 0.028555111 ## 8     2143 0.024614506 ## 9     2314 0.020673901 ## 10    2341 0.000000000 ## 11    2413 0.073215306 ## 12    2431 0.012792690 ## 13    3124 0.048258138 ## 14    3142 0.011479155 ## 15    3214 0.025928041 ## 16    3241 0.000000000 ## 17    3412 0.161222159 ## 18    3421 0.049571673 ## 19    4123 0.149400343 ## 20    4132 0.065334095 ## 21    4213 0.050885208 ## 22    4231 0.010165620 ## 23    4312 0.158595089 ## 24    4321 0.054825814"},{"path":"http://sysilviakim.com/rankingQ/articles/v2-bias-correction.html","id":"estimated-weights-with-original-data","dir":"Articles","previous_headings":"","what":"Estimated Weights with Original Data","title":"2. Correcting Bias in Ranking Data","text":"","code":"identity_w <- out_weights$data head(identity_w) ## # A tibble: 6 × 19 ##       w s_weight app_identity ranking app_identity_1 app_identity_2 ##   <dbl>    <dbl> <chr>        <chr>            <dbl>          <dbl> ## 1  1.02    0.844 1423         1423                 1              4 ## 2  1.02    0.886 1423         1423                 1              4 ## 3  1.27    2.96  3412         3412                 3              4 ## 4  1.02    0.987 1423         1423                 1              4 ## 5  1.10    1.76  4132         4132                 4              1 ## 6  1.02    0.469 3124         3124                 3              1 ## # ℹ 13 more variables: app_identity_3 <dbl>, app_identity_4 <dbl>, ## #   anc_identity <chr>, anc_identity_1 <dbl>, anc_identity_2 <dbl>, ## #   anc_identity_3 <dbl>, anc_identity_4 <dbl>, anc_correct_identity <dbl>, ## #   app_identity_recorded <chr>, anc_identity_recorded <chr>, ## #   app_identity_row_rnd <chr>, anc_identity_row_rnd <chr>, ## #   random_identity <dbl> # save(identity_w, file = \"data/identity_w.rda\")"},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"recorded-responses","dir":"Articles","previous_headings":"","what":"Recorded Responses","title":"5. Uniformity Tests","text":"earlier vignette, showed perform bias correction ranking questions using anchor question. know need bias correction first place? distribution rankings recorded responses can show whether indeed random responses. demonstrate , first, must clarify: recorded responses? following figure shows difference observed ranking recorded response, given item order randomization.  Suppose prefer items -b-c order. ranking exercise, presented order -b-c. , given ordered reference set -b-c, observed ranking recorded response 1-2-3. Recorded responses identical observed rankings item orders fixed. However, item order fixed, observed choice set differs across respondents. , example, items presented order c-b-, observed ranking 1-2-3, recorded response 3-2-1. observed ranking ranking items order reference set, regardless order presented. hand, recorded response ranking items order presented.","code":""},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"recovering-recorded-responses","dir":"Articles","previous_headings":"","what":"Recovering Recorded Responses","title":"5. Uniformity Tests","text":"function recover_recorded_responses recovers recorded responses observed rankings item order randomization. function takes true_order, presented_order, df data frame arguments. example, identity, app_identity column contains observed rankings, app_identity_row_rnd column contains items presented via item order randomization. Thus presented order app_identity_row_rnd true order app_identity. first respondent, reference choice set {party, religion, gender, race}, respondent ranked party-gender-race-religion (1-4-2-3, .e., party first place, religion fourth place, gender second place, race third place). However, items presented respondent order religion-party-race-gender (2-1-4-3). Thus, recorded response 4-1-3-2 (first option shown religion, thus fourth place, second option shown party, thus first place, third option shown race, thus third place, fourth last option shown gender, thus second place). ’s bit tricky first, please read explanation carefully!","code":"recover_recorded_responses(   presented_order = \"app_identity_row_rnd\",   true_order = \"app_identity\",   df = head(identity[, c(\"app_identity\", \"app_identity_row_rnd\")], 10) ) #> # A tibble: 10 × 3 #>    app_identity app_identity_row_rnd app_identity_recorded #>    <chr>        <chr>                <chr>                 #>  1 1423         2143                 4132                  #>  2 1423         1324                 1243                  #>  3 3412         2134                 4312                  #>  4 1423         3421                 2341                  #>  5 4132         2134                 1432                  #>  6 3124         4123                 4312                  #>  7 1234         3124                 3124                  #>  8 4312         1234                 4312                  #>  9 3124         4132                 4321                  #> 10 4321         1432                 4123  ## Alternatively, for the first respondent recover_recorded_responses(   presented_order = \"2143\",   true_order = \"1423\", ) #> [1] \"4132\""},{"path":[]},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"theory","dir":"Articles","previous_headings":"Uniformity Test","what":"Theory","title":"5. Uniformity Tests","text":"Atsusaka Kim (2024), prove item order randomization, recorded responses follow uniform distribution absence random responses. Suppose, example, everyone prefers -b-c order. respondents recorded response 1-2-3, others 3-2-1, given differently observed sets items. , absence random responses, proportion recorded responses possible ranking converge 1/24 = 0.0417, given 4! = 24 possible ways rank items. Accordingly, notable deviation uniform distribution provides evidence presence random responses. happens random responses? figure shows likely scenarios.  hypothetical world, suppose everyone prefers items order c-b-. reference item set (, b, c), recorded responses always 3-2-1 (panel ). item order randomized, recorded responses uniformly distributed (panel D). Now suppose random responses occur patterns panels B E. 50% responses random, recorded responses like panel C reference set fixed respondents, like panel F reference set randomized.","code":""},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"test","dir":"Articles","previous_headings":"Uniformity Test","what":"Test","title":"5. Uniformity Tests","text":"uniformity test checks whether recorded responses follow uniform distribution. Non-uniformity test suggests presence random responses. results indicate recorded responses uniformly distributed, suggesting random responses main identity ranking question. uniformity test also applied detect ballot order effects ranked-choice voting (e.g., Atsusaka (2024)).","code":"tab <- table(identity$app_identity_recorded) chisq.test(tab, p = rep(1 / length(tab), length(tab))) #>  #>  Chi-squared test for given probabilities #>  #> data:  tab #> X-squared = 121.59, df = 23, p-value = 2.149e-15"},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"validity-of-the-anchor-question","dir":"Articles","previous_headings":"","what":"Validity of the Anchor Question","title":"5. Uniformity Tests","text":"Checking uniformity also validates usage anchor question. Although assumption paper simply proportion random responses main anchor question, implicit assumption answering anchor question correctly providing random responses anchor question. can check comparing recorded responses answered anchor question correctly incorrectly. can seen, insufficient evidence reject null hypothesis answered anchor question correctly, recorded responses answered anchor question incorrectly offer clear evidence non-uniformity, 20% respondents submitted either 1234 4321.","code":"## Correctly answered the anchor question tab <- table(identity$anc_identity_recorded[identity$anc_correct_identity == 1]) round(prop.table(tab) * 100, digits = 1) #>  #> 1234 1243 1324 1342 1423 1432 2134 2143 2314 2341 2413 2431 3124 3142 3214 3241  #>  6.5  3.8  3.1  4.2  5.0  4.2  3.1  2.8  3.6  3.3  5.2  4.1  3.8  4.2  5.6  3.2  #> 3412 3421 4123 4132 4213 4231 4312 4321  #>  4.5  4.4  3.4  4.8  4.0  4.5  4.8  3.8 chisq.test(tab, p = rep(1 / length(tab), length(tab))) #>  #>  Chi-squared test for given probabilities #>  #> data:  tab #> X-squared = 31.698, df = 23, p-value = 0.1066  ## Incorrectly answered the anchor question tab <- table(identity$anc_identity_recorded[identity$anc_correct_identity == 0]) round(prop.table(tab) * 100, digits = 1) #>  #> 1234 1243 1324 1342 1423 1432 2134 2143 2314 2341 2413 2431 3124 3142 3214 3241  #> 13.1  6.4  2.7  2.4  4.3  4.9  7.0  4.6  5.2  3.7  2.4  2.7  3.0  2.1  2.4  3.0  #> 3412 3421 4123 4132 4213 4231 4312 4321  #>  0.9  3.7  4.0  2.7  3.0  4.6  4.0  7.0 chisq.test(tab, p = rep(1 / length(tab), length(tab))) #>  #>  Chi-squared test for given probabilities #>  #> data:  tab #> X-squared = 107.95, df = 23, p-value = 5.793e-13"},{"path":"http://sysilviakim.com/rankingQ/articles/v5-uniformity-test.html","id":"caveat-augment-missing-permutation-patterns","dir":"Articles","previous_headings":"","what":"Caveat: Augment Missing Permutation Patterns","title":"5. Uniformity Tests","text":"One thing note: small sample size, ranking patterns might realized. example, sample 10 respondents, possible pattern 1234 observed. cases, important augment missing permutation patterns count 0, can done permn_augment.","code":"tab <- table(head(identity$app_identity_recorded)) tab ## only five patterns out of twenty-four possible patterns #>  #> 1243 1432 2341 4132 4312  #>    1    1    1    1    2 permn_augment(tab) #> 1234 1243 1324 1342 1423 1432 2134 2143 2314 2341 2413 2431 3124 3142 3214 3241  #>    0    1    0    0    0    1    0    0    0    1    0    0    0    0    0    0  #> 3412 3421 4123 4132 4213 4231 4312 4321  #>    0    0    0    1    0    0    2    0"},{"path":"http://sysilviakim.com/rankingQ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Seo-young Silvia Kim. Author, maintainer. Yuki Atsusaka. Author.","code":""},{"path":"http://sysilviakim.com/rankingQ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim S, Atsusaka Y (2024). rankingQ: Design-Based Methods Improving Ranking Questions. R package version 0.1.0, http://sysilviakim.com/rankingQ/, https://github.com/sysilviakim/rankingQ.","code":"@Manual{,   title = {rankingQ: Design-Based Methods for Improving Ranking Questions},   author = {Seo-young Silvia Kim and Yuki Atsusaka},   year = {2024},   note = {R package version 0.1.0, http://sysilviakim.com/rankingQ/},   url = {https://github.com/sysilviakim/rankingQ}, }"},{"path":"http://sysilviakim.com/rankingQ/index.html","id":"rankingq-design-based-methods-for-improving-ranking-questions","dir":"","previous_headings":"","what":"Design-Based Methods for Improving Ranking Questions","title":"Design-Based Methods for Improving Ranking Questions","text":"rankingQ implements design-based methods correcting measurement errors ranking questions due random responses. rankingQ allows users estimate various ranking-based quantities interest non-parametrically parametrically. rankingQ also offers practical tools detecting bias assessing anchor-ranking question. underlying methodology, see Atsusaka Kim (2024). Addressing Measurement Errors Ranking Questions Social Sciences. Political Analysis (conditionally accepted).","code":""},{"path":"http://sysilviakim.com/rankingQ/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design-Based Methods for Improving Ranking Questions","text":"rankingQ can installed using following code:","code":"remotes::install_github(   \"sysilviakim/rankingQ\",   dependencies = TRUE )"},{"path":"http://sysilviakim.com/rankingQ/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Design-Based Methods for Improving Ranking Questions","text":"Please visit package site vignettes references.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/avg_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Average Rank of All Items — avg_rank","title":"Compute the Average Rank of All Items — avg_rank","text":"function calculates average rank data frame contains ranking data. can used long- wide-type data frames.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/avg_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Average Rank of All Items — avg_rank","text":"","code":"avg_rank(   x,   rankings = NULL,   items = NULL,   long = FALSE,   raw = TRUE,   weight = NULL,   round = NULL )"},{"path":"http://sysilviakim.com/rankingQ/reference/avg_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Average Rank of All Items — avg_rank","text":"x data frame contains rankings items. rankings name column contains rankings. Defaults NULL, means function look data frame two columns, \"item\" \"rank\". items name column contains items' names, , case wide file, item names reference choice set. Defaults NULL. long type data frame. Defaults `FALSE`. `TRUE`, means data frame long format, presumed generated rank_longer(). data frame wide format, set `FALSE`. accepts data frame single ranking variable contains rankings, rankings form string \"123\". raw TRUE, function return raw average rank. FALSE, function return average rank correcting based IPW estimator. Defaults TRUE. weight name column contains weights IPW estimator. Defaults NULL. round number decimal places round output . Defaults NULL.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/avg_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Average Rank of All Items — avg_rank","text":"data frame average rank item reference choice set.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/avg_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Average Rank of All Items — avg_rank","text":"","code":"x <- data.frame(   id = c(\"Bernie\", \"Yuki\", \"Silvia\"),   rank = c(\"123\", \"321\", \"213\") ) avg_rank(x, \"rank\") #>   item          qoi     mean        se     lower    upper   method #> 1  1st Average Rank 2.000000 0.5773503 0.8683935 3.131607 Raw Data #> 2  2nd Average Rank 1.666667 0.3333333 1.0133333 2.320000 Raw Data #> 3  3rd Average Rank 2.333333 0.6666667 1.0266667 3.640000 Raw Data avg_rank(x, \"rank\", items = c(\"Money\", \"Power\", \"Respect\")) #>      item          qoi     mean        se     lower    upper   method #> 1   Money Average Rank 2.000000 0.5773503 0.8683935 3.131607 Raw Data #> 2   Power Average Rank 1.666667 0.3333333 1.0133333 2.320000 Raw Data #> 3 Respect Average Rank 2.333333 0.6666667 1.0266667 3.640000 Raw Data  y <- data.frame(rank = c(\"123\", \"321\", \"213\")) avg_rank(y, \"rank\") #>   item          qoi     mean        se     lower    upper   method #> 1  1st Average Rank 2.000000 0.5773503 0.8683935 3.131607 Raw Data #> 2  2nd Average Rank 1.666667 0.3333333 1.0133333 2.320000 Raw Data #> 3  3rd Average Rank 2.333333 0.6666667 1.0266667 3.640000 Raw Data z <- rank_longer(   y,   cols = \"rank\", id = \"id\",   reference = c(\"Money\", \"Power\", \"Respect\") ) #> One column selected. Parsing column by character length. #> Joining with `by = join_by(item_name)` avg_rank(z, \"ranking\", items = \"item_name\", long = TRUE) #>   item_name          qoi     mean        se    lower    upper   method #> 1     Money Average Rank 2.000000 0.3333333 1.346667 2.653333 Raw Data #> 2     Power Average Rank 1.666667 0.1924501 1.289464 2.043869 Raw Data #> 3   Respect Average Rank 2.333333 0.3849002 1.578929 3.087738 Raw Data  ## Example output from item_to_rank x <- data.frame(   item = c(\"a\", \"b\", \"c\", \"a\", \"b\", \"c\", \"a\", \"b\", \"c\"),   rank = c(3L, 1L, 2L, 1L, 2L, 3L, 3L, 2L, 1L) ) avg_rank(x, long = TRUE) #>   item          qoi     mean        se    lower    upper   method #> 1    a Average Rank 2.333333 0.3849002 1.578929 3.087738 Raw Data #> 2    b Average Rank 1.666667 0.1924501 1.289464 2.043869 Raw Data #> 3    c Average Rank 2.000000 0.3333333 1.346667 2.653333 Raw Data"},{"path":"http://sysilviakim.com/rankingQ/reference/identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Identity-ranking data analyzed in Atsusaka and Kim (2024) — identity","title":"Identity-ranking data analyzed in Atsusaka and Kim (2024) — identity","text":"Full dataset survey relative partisanship used Atsusaka, Yuki, & Kim, Seo-young Silvia (2024). Addressing Measurement Errors Ranking Questions Social Sciences. Political Analysis (conditionally accepted). https://osf.io/preprints/osf/3ys8x data contains Americans' rankings four sources identity, including political party, religion, gender, race, 1,082 respondents. columns consist marginal rankings main identity ranking question corresponding anchor question, well whether answered anchor questions \"correctly.\" anchor ranking question used estimate proportion random responses correct measurement error bias.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identity-ranking data analyzed in Atsusaka and Kim (2024) — identity","text":"","code":"identity"},{"path":"http://sysilviakim.com/rankingQ/reference/identity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Identity-ranking data analyzed in Atsusaka and Kim (2024) — identity","text":"## `identity` data frame 1,082 rows 16 columns: app_identity Full ranking profile main identity ranking question. app_identity_1 Marginal ranking party (main identity ranking question). app_identity_2 Marginal ranking religion (main identity ranking question). app_identity_3 Marginal ranking gender (main identity ranking question). app_identity_4 Marginal ranking race (main identity ranking question). anc_identity Full ranking profile anchor ranking question. anc_identity_1 Marginal ranking household (anchor question). anc_identity_2 Marginal ranking neighborhood (anchor question). anc_identity_3 Marginal ranking city (anchor question). anc_identity_4 Marginal ranking state (anchor question). anc_correct_identity Whether respondent answered anchor questions correctly. binary variable 1 respondent correctly answers anchor ranking question 0 otherwise. app_identity_recorded Recorded responses main identity ranking question. anc_identity_recorded Recorded responses anchor ranking question. app_identity_row_rnd order items randomly presented respondent main ranking question. anc_identity_row_rnd order items randomly presented respondent anchor ranking question. s_weight Survey weight.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/identity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Identity-ranking data analyzed in Atsusaka and Kim (2024) — identity","text":"<https://github.com/sysilviakim/ranking_error>","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/identity_w.html","id":null,"dir":"Reference","previous_headings":"","what":"Identity-ranking data with estimated weights based on inverse probability weighting — identity_w","title":"Identity-ranking data with estimated weights based on inverse probability weighting — identity_w","text":"data two extra columns original `identity` data: `w` `ranking`, respectively estimated weights based inverse probability weighting ranking pattern respondent provided, united single column.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/identity_w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identity-ranking data with estimated weights based on inverse probability weighting — identity_w","text":"","code":"identity_w"},{"path":"http://sysilviakim.com/rankingQ/reference/identity_w.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Identity-ranking data with estimated weights based on inverse probability weighting — identity_w","text":"## `identity_w` data frame 1,082 rows 17 columns: w Estimated weight based inverse probability weighting. s_weight Survey weight. app_identity Full ranking profile main identity ranking question. app_identity_1 Marginal ranking party (main identity ranking question). app_identity_2 Marginal ranking religion (main identity ranking question). app_identity_3 Marginal ranking gender (main identity ranking question). app_identity_4 Marginal ranking race (main identity ranking question). anc_identity Full ranking profile anchor ranking question. anc_identity_1 Marginal ranking household (anchor question). anc_identity_2 Marginal ranking neighborhood (anchor question). anc_identity_3 Marginal ranking city (anchor question). anc_identity_4 Marginal ranking state (anchor question). anc_correct_identity Whether respondent answered anchor questions correctly. binary variable 1 respondent correctly answers anchor ranking question 0 otherwise. app_identity_recorded Recorded responses main identity ranking question. anc_identity_recorded Recorded responses anchor ranking question. app_identity_row_rnd order items randomly presented respondent main ranking question. anc_identity_row_rnd order items randomly presented respondent anchor ranking question.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/identity_w.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Identity-ranking data with estimated weights based on inverse probability weighting — identity_w","text":"<https://github.com/sysilviakim/ranking_error>","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements Plug-in Bias-Corrected Estimators for Ranking Data — imprr_direct","title":"Implements Plug-in Bias-Corrected Estimators for Ranking Data — imprr_direct","text":"function implements bias correction ranking distribution using paired anchor question.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements Plug-in Bias-Corrected Estimators for Ranking Data — imprr_direct","text":"","code":"imprr_direct(   data,   J = NULL,   main_q,   anc_correct,   n_bootstrap = 200,   seed = 123456,   weight = NULL,   verbose = FALSE )"},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements Plug-in Bias-Corrected Estimators for Ranking Data — imprr_direct","text":"data input dataset ranking data. J number items ranking question. Defaults NULL, case inferred data, column `main_q` exists data. main_q Column name main ranking question analyzed. Using argument, function automatically looks columns marginal rankings. example, `main_q` `app_identity`, function looks `app_identity_1`, `app_identity_2`, `app_identity_3`, , underbar separator followed numbers. anc_correct Indicator passing anchor question. n_bootstrap Number bootstraps. Defaults 200. seed Seed set.seed reproducibility. weight vector weights. Defaults NULL. verbose Indicator verbose output. Defaults FALSE.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements Plug-in Bias-Corrected Estimators for Ranking Data — imprr_direct","text":"list.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes Bias-Correction Weights for Ranking Data — imprr_weights","title":"Computes Bias-Correction Weights for Ranking Data — imprr_weights","text":"function implements bias correction ranking distribution using paired anchor question, using IPW estimator.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes Bias-Correction Weights for Ranking Data — imprr_weights","text":"","code":"imprr_weights(   data,   J = NULL,   main_q,   anc_correct,   seed = 123456,   weight = NULL,   ranking = \"ranking\" )"},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes Bias-Correction Weights for Ranking Data — imprr_weights","text":"data input dataset ranking data. J number items ranking question. Defaults NULL, case inferred data, column `main_q` exists data. main_q Column name main ranking question analyzed. Using argument, function automatically looks columns marginal rankings. example, `main_q` `app_identity`, function looks `app_identity_1`, `app_identity_2`, `app_identity_3`, , underbar separator followed numbers. anc_correct Indicator passing anchor question. seed Seed set.seed reproducibility. weight vector weights. Defaults NULL. ranking name column store full ranking profile. Defaults \"ranking\". `main_q` exists data, produced column identical `main_q`. However, function defaults creating another column combining marginal rankings, just case.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/imprr_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes Bias-Correction Weights for Ranking Data — imprr_weights","text":"list.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/item_to_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Rankings with Items as Columns — item_to_rank","title":"Return Rankings with Items as Columns — item_to_rank","text":"function takes ranking dataset rankings columns returns dataset items columns rankings cell values. function useful converting rankings format allows average ranking calculations.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/item_to_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Rankings with Items as Columns — item_to_rank","text":"","code":"item_to_rank(   item_rank,   format_input = \"ordering\",   reference = NULL,   long = FALSE )"},{"path":"http://sysilviakim.com/rankingQ/reference/item_to_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Rankings with Items as Columns — item_to_rank","text":"item_rank data frame rankings columns, items ranked cell values. format_input Character string indicating format data input, namely \"ordering\" \"ranking\". Used PLMIX::rank_ord_switch. reference character vector item names used renaming columns. specified, use first 26 letters alphabet. Default `NULL`. long Whether return output long data format. Default `FALSE`.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/item_to_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Rankings with Items as Columns — item_to_rank","text":"data frame items ranked columns, rankings cell values.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/item_to_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Rankings with Items as Columns — item_to_rank","text":"","code":"true_pref <- data.frame(   first = c(\"b\", \"a\", \"c\"),   second = c(\"c\", \"b\", \"b\"),   third = c(\"a\", \"c\", \"a\") ) item_to_rank(true_pref) #>   a b c #> 1 3 1 2 #> 2 1 2 3 #> 3 3 2 1 item_to_rank(true_pref, long = TRUE) #> # A tibble: 9 × 2 #>   item   rank #>   <chr> <int> #> 1 a         3 #> 2 b         1 #> 3 c         2 #> 4 a         1 #> 5 b         2 #> 6 c         3 #> 7 a         3 #> 8 b         2 #> 9 c         1"},{"path":"http://sysilviakim.com/rankingQ/reference/ordinal_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an Ordinal Sequence from a Number — ordinal_seq","title":"Generate an Ordinal Sequence from a Number — ordinal_seq","text":"function generates ordinal sequence arbitrary length. example, length 3, function return vector c(\"1st\", \"2nd\", \"3rd\"). function used within avg_rank functions.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/ordinal_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an Ordinal Sequence from a Number — ordinal_seq","text":"","code":"ordinal_seq(length)"},{"path":"http://sysilviakim.com/rankingQ/reference/ordinal_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an Ordinal Sequence from a Number — ordinal_seq","text":"length length ordinal sequence generate. numeric value length 1.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/ordinal_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an Ordinal Sequence from a Number — ordinal_seq","text":"vector ordinal strings.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/ordinal_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an Ordinal Sequence from a Number — ordinal_seq","text":"","code":"ordinal_seq(11) #>  [1] \"1st\"  \"2nd\"  \"3rd\"  \"4th\"  \"5th\"  \"6th\"  \"7th\"  \"8th\"  \"9th\"  \"10th\" #> [11] \"11th\""},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augmenting Permutation Patterns — permn_augment","title":"Augmenting Permutation Patterns — permn_augment","text":"distribution ranking data, possible permutation patterns may realized due sample size skewed distribution preferences.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augmenting Permutation Patterns — permn_augment","text":"","code":"permn_augment(tab, J = NULL)"},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augmenting Permutation Patterns — permn_augment","text":"tab table observed permutation patterns. J length reference choice set. Defaults NULL, count number characters first input.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augmenting Permutation Patterns — permn_augment","text":"table observed permutation patterns augmented possible permutation patterns.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augmenting Permutation Patterns — permn_augment","text":"function augments given table possible observed permutation patterns frequency zero unrealized patterns.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/permn_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augmenting Permutation Patterns — permn_augment","text":"","code":"tab <- table(c(rep(\"123\", 100), rep(\"321\", 50))) permn_augment(tab, J = 3) #> 123 132 213 231 312 321  #> 100   0   0   0   0  50   tab <- table(c(\"123\", \"321\", \"213\", \"312\", \"132\", \"231\")) permn_augment(tab, J = 3) #>  #> 123 132 213 231 312 321  #>   1   1   1   1   1   1"},{"path":"http://sysilviakim.com/rankingQ/reference/plot_dist_ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","title":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","text":"function takes table frequencies ranking patterns recorded plots permutation space rankings, using ggplot2 package.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/plot_dist_ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","text":"","code":"plot_dist_ranking(   tab,   x = \"ranking\",   y = \"prop\",   ylim = 0.315,   fill = \"firebrick4\",   xlab = \"Recorded Responses\",   family = NULL,   vjust = -0.5,   size = 3,   linetype = \"dashed\",   h_color = \"black\",   h_alpha = 0.5 )"},{"path":"http://sysilviakim.com/rankingQ/reference/plot_dist_ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","text":"tab table frequencies ranking patterns recorded. x Name column contains permutation patterns. y Name column contains proportion ranking permutations. ylim upper limit y-axis. fill color bars. xlab label x-axis. Defaults \"Recorded Responses\". family font family text. vjust vertical justification text. size size text `geom_text`. linetype linetype `geom_hline`. h_color color `geom_hline`. h_alpha transparency `geom_hline`.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/plot_dist_ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","text":"ggplot2 object.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/plot_dist_ranking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Distribution of Rankings Over the Permutation Space — plot_dist_ranking","text":"","code":"tab <- lapply(combinat::permn(seq(3)), paste0, collapse = \"\") |>   sample(30, replace = TRUE) |>   unlist() |>   table() |>   table_to_tibble() plot_dist_ranking(tab, ylim = 0.5)"},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"function takes data frame wide format columns recording rankings long data format.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"","code":"rank_longer(x, cols = NULL, id = NULL, reference = NULL)"},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"x data frame wide format columns recording rankings. cols character vector column names record rankings. multiple columns, order columns order reference choice set. single column, order numbers appear respondent-level character response order reference set. id column uniquely identify respondent. reference wish specify reference choice set, can provide character vector.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"data frame long format columns recording rankings. first column id variable pre-specified. second third columns record item ranked. final column records ranking item.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"data frame one columns specified cols argument, translated first, second, third, etc. items reference choice set. example, first column records 2, second column records 1, third column records 3, function interpret respondent prefers second item , first item, third item. data frame one column specified cols argument, parsed character length. example, column records \"213\", function interpret respondent prefers second item , first, third item. Currently, function depends tidyverse functions. Eventually, data.table option added large datasets.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rank_longer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn Column(s) Recording Rankings in Wide Format into a Long Data Format — rank_longer","text":"","code":"x <- data.frame(   apple = c(2, 1, 3),   orange = c(1, 3, 2),   banana = c(3, 2, 1) ) rank_longer(x) #> No ID column specified. Using row number. #> Multiple columns selected. #> Using input column order as ranking order. #> Joining with `by = join_by(item_name)` #> # A tibble: 9 × 4 #>      id reference_no item_name ranking #>   <int>        <int> <chr>       <dbl> #> 1     1            1 apple           2 #> 2     1            2 orange          1 #> 3     1            3 banana          3 #> 4     2            1 apple           1 #> 5     2            2 orange          3 #> 6     2            3 banana          2 #> 7     3            1 apple           3 #> 8     3            2 orange          2 #> 9     3            3 banana          1  y <- data.frame(   id = c(\"Bernie\", \"Yuki\", \"Silvia\"),   rank = c(\"123\", \"321\", \"213\") ) rank_longer(y, cols = \"rank\", id = \"id\") #> One column selected. Parsing column by character length. #> No reference choice set specified. Using general column names. #> Joining with `by = join_by(item_name)` #> # A tibble: 9 × 4 #>   id     reference_no item_name ranking #>   <chr>         <int> <chr>       <dbl> #> 1 Bernie            1 V1              1 #> 2 Bernie            2 V2              2 #> 3 Bernie            3 V3              3 #> 4 Silvia            1 V1              2 #> 5 Silvia            2 V2              1 #> 6 Silvia            3 V3              3 #> 7 Yuki              1 V1              3 #> 8 Yuki              2 V2              2 #> 9 Yuki              3 V3              1 rank_longer(   y,   cols = \"rank\", id = \"id\",   reference = c(\"Money\", \"Power\", \"Respect\") ) #> One column selected. Parsing column by character length. #> Joining with `by = join_by(item_name)` #> # A tibble: 9 × 4 #>   id     reference_no item_name ranking #>   <chr>         <int> <chr>       <dbl> #> 1 Bernie            1 Money           1 #> 2 Bernie            2 Power           2 #> 3 Bernie            3 Respect         3 #> 4 Silvia            1 Money           2 #> 5 Silvia            2 Power           1 #> 6 Silvia            3 Respect         3 #> 7 Yuki              1 Money           3 #> 8 Yuki              2 Power           2 #> 9 Yuki              3 Respect         1"},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"function, using order items presented respondent well true responses ranking question, recovers recorded responses, responses respondent actually provided, ignoring order items presented.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"","code":"recover_recorded_responses(true_order, presented_order, df = NULL)"},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"true_order string representing true ranking respondent respect reference choice set. presented_order string representing order items presented respondent. df input data frame. Defaults NULL. NULL, function expects inputs simple strings \"321\" \"312\".","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"data frame true ranking items per respondent.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"see behavior diagonalization occurred. survey software take recorded response translate true ranking respondent (observed ranking), providing recorded response. example, given reference choice set three items, , B, C, respondent may presented items order C, B, , may responded 3-2-1 recorded response. true order items , B, C, observed/true ranking 1-2-3. function takes C, B, 1-2-3 inputs returns 3-2-1.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/recover_recorded_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recover the Recorded Responses Given that Ranking Items were Randomized — recover_recorded_responses","text":"","code":"## This respondent's true ranking reported is A-B-C-D. ## However, the items were presented in the order B-A-D-C. ## Therefore, the respondent's recorded response is 2-1-4-3. recover_recorded_responses(true_order = \"1234\", \"2143\") ## Output: \"2143\" #> [1] \"2143\"  ## This respondent's true ranking is reported as D-C-B-A. ## However, the items were presented in the order A-B-C-D. ## Therefore, the respondent's recorded response is 4-3-2-1. recover_recorded_responses(true_order = \"4321\", \"1234\") ## Output: \"4321\" #> [1] \"4321\"  ## This respondent's true ranking is reported as C-A-D-B. ## However, the items were presented in the order D-C-B-A. ## Therefore, the respondent's recorded response is 3-1-4-2. recover_recorded_responses(true_order = \"2413\", \"4321\") ## Output: \"3142\" #> [1] \"3142\""},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Samples from the Plackett-Luce Model — rpluce","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"function draws samples Plackett-Luce model, using Algorithm 2.1, \"Efficient Sampling Plackett-Luce,\" [Xia (2019)](https://link.springer.com/book/10.1007/978-3-031-01582-3), page 20, Section 2.2.3 Sampling Random Utility Models. name rpluce convention follows random generations numbers statistical distributions rnorm rmultinom.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"","code":"rpluce(n, t, prob, choices = NULL, seed = NULL)"},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"n total number samples draw. t number items alternatives choose . prob vector choice probabilities. choices vector choices ranked. seed optional seed random number generator.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"data frame rankings t items n assessors.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"Input: parameter \\(\\overrightarrow{\\gamma} = (\\gamma_1, \\cdots, \\gamma_m)\\) Plackett-Luce. Output: ranking \\(R \\\\mathcal{L}(\\mathcal{})\\) \\(pi_{\\overrightarrow{\\gamma}} ( \\cdot )\\) Plackett–Luce.     1: Let \\(R = \\emptyset\\) \\(= \\mathcal{}\\).     2: \\(t = 1\\) \\(m\\)     3:   Choose alternative \\(a_{i_t}\\) \\(\\)        probability proportional \\(\\gamma_{i_t}\\).     4:   \\(R \\leftarrow R \\succ a_{i_t}\\)        \\(\\leftarrow \\ \\{ a_{i_t} \\}\\).     5: end    6: return \\(R\\).","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/rpluce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Samples from the Plackett-Luce Model — rpluce","text":"","code":"rpluce(n = 10, t = 3, prob = c(0.5, 0.3, 0.2), seed = 123) #>    1st 2nd 3rd #> 1    c   a   b #> 2    a   c   b #> 3    b   c   a #> 4    a   b   c #> 5    a   b   c #> 6    a   b   c #> 7    c   a   b #> 8    b   c   a #> 9    a   c   b #> 10   a   c   b"},{"path":"http://sysilviakim.com/rankingQ/reference/stratified_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Estimate of Average Ranks — stratified_avg","title":"Stratified Estimate of Average Ranks — stratified_avg","text":"function estimates average ranks based stratification.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/stratified_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Estimate of Average Ranks — stratified_avg","text":"","code":"stratified_avg(   data,   var_stratum,   J = NULL,   main_q,   anc_correct,   labels = NULL,   seed = 1234,   weight = NULL,   n_bootstrap = 200,   ipw = FALSE,   verbose = FALSE )"},{"path":"http://sysilviakim.com/rankingQ/reference/stratified_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified Estimate of Average Ranks — stratified_avg","text":"data data frame containing ranking data well stratifying variable. var_stratum name stratifying variable. J number items ranking question. Defaults NULL, case inferred data. main_q Column name main ranking question analyzed. anc_correct Indicator passing anchor question. labels vector labels items ranked. Defaults NULL. seed Seed set.seed reproducibility. weight vector weights. Defaults NULL. n_bootstrap Number bootstraps. Defaults 200. ipw Indicator using inverse probability weighting. Defaults FALSE, case direct bias estimation employed. verbose Indicator verbose output. Defaults FALSE.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/stratified_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified Estimate of Average Ranks — stratified_avg","text":"data frame bootstrap-estimated average ranks.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/table_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","title":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","text":"function converts frequency table tibble data frame. also creates proportion variable well frequency variable. function useful plotting distribution ranking patterns; see relevant vignette.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/table_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","text":"","code":"table_to_tibble(tab, tibble = TRUE)"},{"path":"http://sysilviakim.com/rankingQ/reference/table_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","text":"tab frequency table. tibble logical value indicating whether output tibble data frame. Default TRUE.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/table_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","text":"tibble data frame, depending tibble argument.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/table_to_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn the Frequency Table into a Tibble or Data Frame — table_to_tibble","text":"","code":"tab <- lapply(combinat::permn(seq(3)), paste0, collapse = \"\") |>   sample(30, replace = TRUE) |>   unlist() |>   table() table_to_tibble(tab) #> # A tibble: 6 × 3 #>   ranking  freq  prop #>   <fct>   <dbl> <dbl> #> 1 123         5 0.167 #> 2 132         5 0.167 #> 3 213         3 0.1   #> 4 231         8 0.267 #> 5 312         5 0.167 #> 6 321         4 0.133"},{"path":"http://sysilviakim.com/rankingQ/reference/unbiased_correct_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","title":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","text":"function computes unbiased proportion *correct* answers adjusting possibility respondent may randomly guessed correct answer. function based formula provided Proposition 1 Atsusaka Kim (2024).","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/unbiased_correct_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","text":"","code":"unbiased_correct_prop(mean_c, J)"},{"path":"http://sysilviakim.com/rankingQ/reference/unbiased_correct_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","text":"mean_c raw proportion correct answers. J number items rank order.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/unbiased_correct_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","text":"number 0-1.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/unbiased_correct_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unbiased Estimator of the Proportion of Random and Non-random Responses — unbiased_correct_prop","text":"","code":"unbiased_correct_prop(0.7, 3) #> [1] 0.64"},{"path":"http://sysilviakim.com/rankingQ/reference/viz_avg_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Average Rankings — viz_avg_rank","title":"Visualize Average Rankings — viz_avg_rank","text":"Visualize Average Rankings","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_avg_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Average Rankings — viz_avg_rank","text":"","code":"viz_avg_rank(   data,   order = \"est\",   J = NULL,   compare = TRUE,   varname_type = \"imp\",   color_list = c(\"#b0015a\", \"#999999\"),   label_pad_width = 2,   imp_pad_width = 15,   geom_point_size = 2 )"},{"path":"http://sysilviakim.com/rankingQ/reference/viz_avg_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Average Rankings — viz_avg_rank","text":"data input data frame ranking data calculate average ranks . order order items displayed visualization. \"est\", items ordered estimated average rank, highest lowest (.e., small number large number). \"fixed\", items ordered specified data frame (.e., ordered factor), padding argument ignored. non-NULL value \"est\" \"fixed\", items ordered specified \"order.\" , NULL, items ordered alphabetical names. Defaults \"est\". J number items compare. Defaults NULL, assume data frame two groups items compare (using raw debiased data), take half number rows. J specified, function assume data frame J items compare. compare logical value indicating whether compare raw debiased data. Defaults TRUE. FALSE, assumed data contains either raw debiased data. varname_type variable name contains whether row debiased raw data. Defaults \"imp\". relevant compare TRUE. color_list vector colors use visualization. Defaults c(\"#b0015a\", \"#999999\"). first color used debiased data, second color used raw data. label_pad_width width padding labels. Defaults 2. imp_pad_width width padding legend labels. Defaults 15. geom_point_size size points visualization. Defaults 2.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_avg_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Average Rankings — viz_avg_rank","text":"ggplot object.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_avg_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Average Rankings — viz_avg_rank","text":"","code":"## Sample output using imprr function avg_df <- data.frame(   name = c(     \"strawberry\", \"strawberry\", \"blueberry\", \"blueberry\",     \"apricot\", \"apricot\"   ),   est = c(1.56, 1.73, 2.01, 2.01, 2.43, 2.27),   low = c(1.48, 1.68, 1.94, 1.96, 2.35, 2.22),   up = c(1.63, 1.78, 2.08, 2.06, 2.51, 2.31),   imp = c(     \"debiased data\", \"raw data\", \"debiased data\",     \"raw data\", \"debiased data\", \"raw data\"   ) )  viz_avg_rank(avg_df)  viz_avg_rank(avg_df, order = NULL)  viz_avg_rank(avg_df, order = c(\"blueberry\", \"apricot\", \"strawberry\"))"},{"path":"http://sysilviakim.com/rankingQ/reference/viz_ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","title":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","text":"vis_ranking visualizes four quantities interest ranking data: average rankings, pair rankings single target item items, top-k ranking target item, marginal ranking target item.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","text":"","code":"viz_ranking(   dat,   target_item,   other_items,   treat = NULL,   single_plot = TRUE,   weight = rep(1, dim(dat)[1]),   color_palette = c(\"black\", \"#b0015a\", \"#128ba0\", \"gray\"),   font = NULL )"},{"path":"http://sysilviakim.com/rankingQ/reference/viz_ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","text":"dat input dataset ranking data. target_item string target item's variable name other_items set strings variable names corresponding items available ranking options treat treatment indicator variable. Defaults NULL. single_plot TRUE, returns single plot. FALSE, returns list plots compose combined plot. Defaults TRUE. weight weight vector used. color_palette color palette used. font font used. Defaults NULL.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","text":"ggplot visualizes treatment effects. single_plot TRUE, return single ggplot. FALSE, return four ggplot objects list: average ranks, pairwise ranks, top-k ranks, marginal ranks.","code":""},{"path":"http://sysilviakim.com/rankingQ/reference/viz_ranking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Quantities of Interest Using Ranking Data — viz_ranking","text":"","code":"jam <- data.frame(   strawberry = c(     1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 3, 1, 1, 2, 2, 1, 1, 1,     2, 3, 1, 1, 2, 1, 2, 3, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1,     1, 1, 3, 3, 1, 1, 3, 3, 1   ),   apricot = c(     3, 3, 2, 3, 1, 3, 2, 1, 2, 3, 3, 2, 1, 2, 2, 3, 3, 3, 3, 2,     3, 2, 3, 3, 3, 2, 3, 1, 2, 2, 3, 3, 2, 1, 3, 1, 2, 3, 2, 2, 3,     2, 2, 1, 1, 2, 2, 1, 1, 3   ),   blueberry = c(     2, 2, 3, 1, 3, 1, 3, 3, 3, 1, 2, 3, 2, 3, 3, 1, 1, 2, 2, 3,     1, 1, 2, 2, 1, 3, 1, 2, 3, 3, 2, 2, 3, 3, 2, 3, 3, 1, 3, 3, 2,     3, 3, 2, 2, 3, 3, 2, 2, 2   ) ) viz_ranking(   dat = jam,   target_item = \"strawberry\",   other_items = c(\"apricot\", \"blueberry\") )"}]
